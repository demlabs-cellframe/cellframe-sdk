#!/bin/bash
# –§–∏–Ω–∞–ª—å–Ω—ã–π —Ä—ã–≤–æ–∫ - –ø—Ä–æ—Å—Ç—ã–µ bash –∫–æ–º–∞–Ω–¥—ã

echo "üéØ –§–ò–ù–ê–õ–¨–ù–´–ô –†–´–í–û–ö –ö –ó–ê–í–ï–†–®–ï–ù–ò–Æ –ú–ò–ì–†–ê–¶–ò–ò"

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ —Å–±–æ—Ä–∫–∏
check_build() {
    cd build && make -j4 > /dev/null 2>&1
    return $?
}

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø–æ–¥—Å—á–µ—Ç–∞ –ø—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏–π
count_warnings() {
    cd build && make clean > /dev/null 2>&1 && make -j4 2>&1 | grep "warning:" | wc -l
}

initial=$(count_warnings)
echo "üìä –ù–∞—á–∞–ª—å–Ω—ã–µ –ø—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏—è: $initial"

# –ü—Ä–æ—Å—Ç—ã–µ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—è –ø–æ –æ–¥–Ω–æ–º—É
fixes=(
    "find modules/ -name '*.c' -exec sed -i 's/json_object_get_string(/dap_json_object_get_string(/g' {} \;"
    "find modules/ -name '*.c' -exec sed -i 's/json_object_is_type(/dap_json_object_is_type(/g' {} \;"  
    "find modules/ -name '*.c' -exec sed -i 's/json_object_array_get_idx(/dap_json_array_get_idx(/g' {} \;"
    "find modules/ -name '*.c' -exec sed -i 's/json_object_object_get(/dap_json_object_get(/g' {} \;"
)

descriptions=(
    "Replace json_object_get_string"
    "Replace json_object_is_type"
    "Replace json_object_array_get_idx"
    "Replace json_object_object_get"
)

success=0
for i in "${!fixes[@]}"; do
    echo "üîß ${descriptions[$i]}"
    
    # –ü—Ä–∏–º–µ–Ω—è–µ–º –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–µ
    eval "${fixes[$i]}"
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å–±–æ—Ä–∫—É
    if check_build; then
        warnings=$(count_warnings)
        echo "‚úÖ –£—Å–ø–µ—à–Ω–æ: $warnings –ø—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏–π"
        
        # –ö–æ–º–º–∏—Ç–∏–º
        git add modules/
        git commit -m "fix: ${descriptions[$i]}

Warnings: $warnings"
        ((success++))
    else
        echo "‚ùå –°–±–æ—Ä–∫–∞ —Å–ª–æ–º–∞–ª–∞—Å—å, –æ—Ç–∫–∞—Ç—ã–≤–∞–µ–º—Å—è..."
        git checkout HEAD -- modules/
        break
    fi
done

final=$(count_warnings)
echo ""
echo "üèÅ –§–ò–ù–ê–õ–¨–ù–´–ô –†–´–í–û–ö –ó–ê–í–ï–†–®–ï–ù:"
echo "üìä $initial ‚Üí $final –ø—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏–π"
echo "‚úÖ –£—Å–ø–µ—à–Ω—ã—Ö –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–π: $success/${#fixes[@]}"
echo "üîß –ò—Å–ø—Ä–∞–≤–ª–µ–Ω–æ: $((initial - final)) –ø—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏–π"

echo ""
echo "üìà –û–ë–©–ò–ô –ò–¢–û–ì –í–°–ï–ô –ê–í–¢–û–ú–ê–¢–ò–ó–ê–¶–ò–ò:"
echo "üéØ –û—Ç ~1600+ –ø—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏–π –¥–æ $final"
echo "üéâ –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–æ: ~$((1600 - final))+ –ø—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏–π!"
echo "üèÜ –£—Å–ø–µ—à–Ω–æ—Å—Ç—å: $(echo "scale=1; ((1600 - $final) / 1600) * 100" | bc)%"

if [ $final -eq 0 ]; then
    echo ""
    echo "üéâüéâüéâ –ú–ò–ì–†–ê–¶–ò–Ø JSON API –ü–û–õ–ù–û–°–¢–¨–Æ –ó–ê–í–ï–†–®–ï–ù–ê! üéâüéâüéâ"
    echo "üèÜ –í–°–ï –ü–†–ï–î–£–ü–†–ï–ñ–î–ï–ù–ò–Ø –ò–°–ü–†–ê–í–õ–ï–ù–´ –ê–í–¢–û–ú–ê–¢–ò–ß–ï–°–ö–ò!"
elif [ $final -lt 100 ]; then
    echo ""
    echo "üéâ –ü–û–ß–¢–ò –ò–î–ï–ê–õ–¨–ù–û! –û—Å—Ç–∞–ª–æ—Å—å –≤—Å–µ–≥–æ $final –ø—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏–π!"
elif [ $final -lt 300 ]; then
    echo ""
    echo "üöÄ –û–¢–õ–ò–ß–ù–´–ô –†–ï–ó–£–õ–¨–¢–ê–¢! –û—Å—Ç–∞–ª–æ—Å—å $final –ø—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏–π!"
else
    echo ""
    echo "üëç –•–û–†–û–®–ò–ô –ü–†–û–ì–†–ï–°–°! –û—Å—Ç–∞–ª–æ—Å—å $final –ø—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏–π"
fi
